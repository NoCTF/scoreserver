// Auto generated by gendb. DO NOT EDIT.
package db

import (
	"errors"
	"fmt"
	"time"
)

const (
	PlayerSelectCols = "id, name, email, team_id, password, created_on"
	PlayerTable      = "players"
)

var (
	ErrNotCreatedPlayer = errors.New(`given player is not created on database`)
)

func (player *Player) Scan(scanner Scanner) error {
	return scanner.Scan(
		&player.ID,
		&player.Name,
		&player.Email,
		&player.TeamID,
		&player.Password,
		&player.CreatedOn,
	)
}
func (player *Player) LoadByID(tx *Tx, id string) error {
	sql := fmt.Sprintf(`SELECT %s FROM %s WHERE id = ?`, PlayerSelectCols, PlayerTable)
	stmt, err := db.Prepare(sql)
	if err != nil {
		return err
	}
	row := tx.Stmt(stmt).QueryRow(id)
	if err := player.Scan(row); err != nil {
		return err
	}
	return nil
}
func (player *Player) Create(tx *Tx) error {
	player.CreatedOn = time.Now()
	stmt := fmt.Sprintf(`INSERT INTO %s (id, name, email, team_id, password, created_on) VALUES (?, ?, ?, ?, ?, ?)`, PlayerTable)
	result, err := tx.Exec(stmt, player.ID, player.Name, player.Email, player.TeamID, player.Password, player.CreatedOn)
	if err != nil {
		return err
	}
	lid, err := result.LastInsertId()
	if err != nil {
		return err
	}
	player.ID = int(lid)
	return nil
}

func (player *Player) Update(tx *Tx) error {
	if player.ID == 0 {
		return ErrNotCreatedPlayer
	}
	sql := fmt.Sprintf(`UPDATE %s SET id = ?, name = ?, email = ?, team_id = ?, password = ?, created_on = ?`, PlayerTable)
	stmt, err := db.Prepare(sql)
	if err != nil {
		return err
	}
	_, err = tx.Stmt(stmt).Exec(player.ID, player.Name, player.Email, player.TeamID, player.Password, player.CreatedOn)
	return err
}

func (player *Player) Delete(tx *Tx) error {
	if player.ID == 0 {
		return ErrNotCreatedPlayer
	}
	sql := fmt.Sprintf(`DELETE FROM %s WHERE id = ?`, PlayerTable)
	stmt, err := db.Prepare(sql)
	if err != nil {
		return err
	}
	_, err = tx.Stmt(stmt).Exec(player.ID)
	return err
}
